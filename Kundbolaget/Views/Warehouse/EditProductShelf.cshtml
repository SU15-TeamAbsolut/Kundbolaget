@model Kundbolaget.Models.EntityModels.ProductShelf

@using Kundbolaget.EntityFramework.Contexts
@using Kundbolaget.EntityFramework.Repositories
@using Kundbolaget.Models.EntityModels
@using Kundbolaget.Models.ViewModels

@{
    IRepository<Product> productRepository = new DataRepository<Product>();
    IRepository<Shelf> shelfRepository = new DataRepository<Shelf>();
    var products = productRepository.GetAll();
    var shelf = shelfRepository.Find(Kundbolaget.Controllers.WarehouseController.currentShelfId);
    ViewBag.Title = "EditProductShelf";
}

<h2>Redigera hyllplats</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Hylla @shelf.Name</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Product, htmlAttributes: new { @class = "control-label col-md-1" })
            <div style="display:inline-block; max-width: 500px; padding-left: 1%">
                @Html.DropDownListFor(x => x.ProductId, new SelectList(products, "Id", "Name"), "Välj produkt", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.ProductId, "", new { @class = "text-danger" })
                @Html.HiddenFor(x => x.ProductId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentAmount, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10" style="max-width:100px;">
                @Html.EditorFor(model => model.CurrentAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinimumAmount, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10" style="max-width:100px;">
                @Html.EditorFor(model => model.MinimumAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinimumAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10" style="max-width:100px;">
                @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-10">
            @Html.ActionLink("Tillbaka", "EditShelf/" + Model.ShelfId, null, new { @class = "btn btn-primary" })
            <input type="submit" value="Spara" class="btn btn-primary" />
        </div>
    </div>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
